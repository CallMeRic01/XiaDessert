{
  "meta": {
    "options": {
      "linkedFile": "/views/admin_order.ejs",
      "linkedForm": "serverconnectform1"
    },
    "$_GET": [
      {
        "type": "text",
        "name": "sort"
      },
      {
        "type": "text",
        "name": "dir"
      }
    ],
    "$_POST": [
      {
        "type": "array",
        "fieldName": "pro_id[]",
        "multiple": true,
        "name": "pro_id"
      },
      {
        "type": "array",
        "fieldName": "detOrd_quantity[]",
        "multiple": true,
        "name": "detOrd_quantity"
      },
      {
        "type": "text",
        "fieldName": "ord_totalAmount",
        "name": "ord_totalAmount"
      },
      {
        "type": "text",
        "fieldName": "ord_date",
        "name": "ord_date"
      },
      {
        "type": "text",
        "fieldName": "ord_changeAmount",
        "name": "ord_changeAmount"
      },
      {
        "type": "text",
        "fieldName": "takeawayFee",
        "name": "takeawayFee"
      },
      {
        "type": "text",
        "fieldName": "ord_isTA",
        "name": "ord_isTA"
      },
      {
        "type": "number",
        "fieldName": "ord_paidCash",
        "options": {
          "rules": {
            "core:number": {}
          }
        },
        "name": "ord_paidCash"
      },
      {
        "type": "text",
        "fieldName": "ord_payMethod",
        "name": "ord_payMethod"
      },
      {
        "type": "number",
        "fieldName": "ord_dis",
        "options": {
          "rules": {
            "core:number": {}
          }
        },
        "name": "ord_dis"
      },
      {
        "type": "array",
        "name": "record",
        "sub": [
          {
            "type": "number",
            "name": "pro_stock"
          },
          {
            "type": "number",
            "name": "pro_id"
          },
          {
            "type": "number",
            "name": "stock"
          },
          {
            "type": "number",
            "name": "g_stock"
          },
          {
            "type": "number",
            "name": "$_POST"
          },
          {
            "type": "number",
            "name": "repeatInsertDetails[0]"
          },
          {
            "type": "number",
            "name": "repeat"
          },
          {
            "type": "number",
            "name": "insertOrder"
          },
          {
            "type": "datetime",
            "name": "detOrd_date"
          },
          {
            "type": "number",
            "name": "query[0]"
          }
        ]
      },
      {
        "type": "text",
        "fieldName": "pro_stock[]",
        "multiple": true,
        "name": "pro_stock"
      },
      {
        "type": "text",
        "fieldName": "detOrd_date",
        "name": "detOrd_date"
      },
      {
        "type": "text",
        "fieldName": "cust_id",
        "name": "cust_id"
      },
      {
        "type": "text",
        "fieldName": "SearchCust",
        "name": "SearchCust"
      },
      {
        "type": "text",
        "fieldName": "selected_customerID",
        "name": "selected_customerID"
      },
      {
        "type": "text",
        "fieldName": "cust_name",
        "name": "cust_name"
      }
    ]
  },
  "exec": {
    "steps": [
      {
        "name": "insertOrder",
        "module": "dbupdater",
        "action": "insert",
        "options": {
          "connection": "db",
          "sql": {
            "type": "insert",
            "values": [
              {
                "table": "order",
                "column": "ord_totalAmount",
                "type": "number",
                "value": "{{$_POST.ord_totalAmount}}",
                "recid": 1
              },
              {
                "table": "order",
                "column": "ord_date",
                "type": "datetime",
                "value": "{{$_POST.ord_date}}",
                "recid": 2
              },
              {
                "table": "order",
                "column": "ord_changeAmount",
                "type": "number",
                "value": "{{$_POST.ord_changeAmount}}",
                "recid": 3
              },
              {
                "table": "order",
                "column": "ord_isTA",
                "type": "boolean",
                "value": "{{$_POST.ord_isTA}}",
                "recid": 4
              },
              {
                "table": "order",
                "column": "ord_paidCash",
                "type": "number",
                "value": "{{$_POST.ord_paidCash}}",
                "recid": 5
              },
              {
                "table": "order",
                "column": "ord_payMethod",
                "type": "text",
                "value": "{{$_POST.ord_payMethod}}",
                "recid": 6
              },
              {
                "table": "order",
                "column": "ord_dis",
                "type": "number",
                "value": "{{$_POST.ord_dis}}",
                "recid": 7
              }
            ],
            "table": "order",
            "returning": "ord_id",
            "query": "insert into `order` (`ord_changeAmount`, `ord_date`, `ord_dis`, `ord_isTA`, `ord_paidCash`, `ord_payMethod`, `ord_totalAmount`) values (?, ?, ?, ?, ?, ?, ?)",
            "params": [
              {
                "name": ":P1",
                "type": "expression",
                "value": "{{$_POST.ord_totalAmount}}"
              },
              {
                "name": ":P2",
                "type": "expression",
                "value": "{{$_POST.ord_date}}"
              },
              {
                "name": ":P3",
                "type": "expression",
                "value": "{{$_POST.ord_changeAmount}}"
              },
              {
                "name": ":P4",
                "type": "expression",
                "value": "{{$_POST.ord_isTA}}"
              },
              {
                "name": ":P5",
                "type": "expression",
                "value": "{{$_POST.ord_paidCash}}"
              },
              {
                "name": ":P6",
                "type": "expression",
                "value": "{{$_POST.ord_payMethod}}"
              },
              {
                "name": ":P7",
                "type": "expression",
                "value": "{{$_POST.ord_dis}}",
                "test": ""
              }
            ]
          }
        },
        "meta": [
          {
            "name": "identity",
            "type": "text"
          },
          {
            "name": "affected",
            "type": "number"
          }
        ],
        "output": true
      },
      {
        "name": "repeatInsertDetails",
        "module": "core",
        "action": "repeat",
        "options": {
          "repeat": "{{$_POST.pro_id}}",
          "outputFields": [],
          "exec": {
            "steps": [
              {
                "name": "",
                "module": "core",
                "action": "condition",
                "options": {
                  "if": "{{$_POST.cust_id}}",
                  "then": {
                    "steps": {
                      "name": "insertDetails_copy1",
                      "module": "dbupdater",
                      "action": "insert",
                      "options": {
                        "connection": "db",
                        "sql": {
                          "type": "insert",
                          "values": [
                            {
                              "table": "detailsOrder",
                              "column": "ord_id",
                              "type": "number",
                              "value": "{{insertOrder.identity}}",
                              "recid": 1
                            },
                            {
                              "table": "detailsOrder",
                              "column": "pro_id",
                              "type": "number",
                              "value": "{{$_POST.pro_id[$index]}}",
                              "recid": 2
                            },
                            {
                              "table": "detailsOrder",
                              "column": "detOrd_quantity",
                              "type": "number",
                              "value": "{{$_POST.detOrd_quantity[$index]}}",
                              "recid": 3
                            },
                            {
                              "table": "detailsOrder",
                              "column": "detOrd_date",
                              "type": "datetime",
                              "value": "{{$_POST.detOrd_date}}",
                              "recid": 4
                            },
                            {
                              "table": "detailsOrder",
                              "column": "cust_id",
                              "type": "number",
                              "value": "{{$_POST.cust_id}}",
                              "recid": 5
                            }
                          ],
                          "table": "detailsOrder",
                          "returning": "detOrd_id",
                          "query": "insert into `detailsOrder` (`cust_id`, `detOrd_date`, `detOrd_quantity`, `ord_id`, `pro_id`) values (?, ?, ?, ?, ?)",
                          "params": [
                            {
                              "name": ":P1",
                              "type": "expression",
                              "value": "{{insertOrder.identity}}",
                              "test": ""
                            },
                            {
                              "name": ":P2",
                              "type": "expression",
                              "value": "{{$_POST.pro_id[$index]}}",
                              "test": ""
                            },
                            {
                              "name": ":P3",
                              "type": "expression",
                              "value": "{{$_POST.detOrd_quantity[$index]}}",
                              "test": ""
                            },
                            {
                              "name": ":P4",
                              "type": "expression",
                              "value": "{{$_POST.detOrd_date}}",
                              "test": ""
                            },
                            {
                              "name": ":P5",
                              "type": "expression",
                              "value": "{{$_POST.cust_id}}",
                              "test": ""
                            }
                          ]
                        }
                      },
                      "meta": [
                        {
                          "name": "identity",
                          "type": "text"
                        },
                        {
                          "name": "affected",
                          "type": "number"
                        }
                      ],
                      "output": true
                    }
                  },
                  "else": {
                    "steps": {
                      "name": "insertDetails_copy",
                      "module": "dbupdater",
                      "action": "insert",
                      "options": {
                        "connection": "db",
                        "sql": {
                          "type": "insert",
                          "values": [
                            {
                              "table": "detailsOrder",
                              "column": "ord_id",
                              "type": "number",
                              "value": "{{insertOrder.identity}}",
                              "recid": 1
                            },
                            {
                              "table": "detailsOrder",
                              "column": "pro_id",
                              "type": "number",
                              "value": "{{$_POST.pro_id[$index]}}",
                              "recid": 2
                            },
                            {
                              "table": "detailsOrder",
                              "column": "detOrd_quantity",
                              "type": "number",
                              "value": "{{$_POST.detOrd_quantity[$index]}}",
                              "recid": 3
                            },
                            {
                              "table": "detailsOrder",
                              "column": "detOrd_date",
                              "type": "datetime",
                              "value": "{{$_POST.detOrd_date}}",
                              "recid": 4
                            }
                          ],
                          "table": "detailsOrder",
                          "returning": "detOrd_id",
                          "query": "insert into `detailsOrder` (`detOrd_date`, `detOrd_quantity`, `ord_id`, `pro_id`) values (?, ?, ?, ?)",
                          "params": [
                            {
                              "name": ":P1",
                              "type": "expression",
                              "value": "{{insertOrder.identity}}",
                              "test": ""
                            },
                            {
                              "name": ":P2",
                              "type": "expression",
                              "value": "{{$_POST.pro_id[$index]}}",
                              "test": ""
                            },
                            {
                              "name": ":P3",
                              "type": "expression",
                              "value": "{{$_POST.detOrd_quantity[$index]}}",
                              "test": ""
                            },
                            {
                              "name": ":P4",
                              "type": "expression",
                              "value": "{{$_POST.detOrd_date}}",
                              "test": ""
                            }
                          ]
                        }
                      },
                      "meta": [
                        {
                          "name": "identity",
                          "type": "text"
                        },
                        {
                          "name": "affected",
                          "type": "number"
                        }
                      ],
                      "output": true
                    }
                  }
                },
                "outputType": "boolean"
              },
              {
                "name": "validate",
                "module": "validator",
                "action": "validate",
                "options": {
                  "data": [
                    {
                      "name": "quantity",
                      "value": "{{$_POST.detOrd_quantity.length() >= 1}}",
                      "rules": {},
                      "fieldName": "detOrd_quantity[]"
                    }
                  ]
                },
                "disabled": true
              },
              {
                "name": "insertDetails",
                "module": "dbupdater",
                "action": "insert",
                "options": {
                  "connection": "db",
                  "sql": {
                    "type": "insert",
                    "values": [
                      {
                        "table": "detailsOrder",
                        "column": "ord_id",
                        "type": "number",
                        "value": "{{insertOrder.identity}}",
                        "recid": 1
                      },
                      {
                        "table": "detailsOrder",
                        "column": "pro_id",
                        "type": "number",
                        "value": "{{$_POST.pro_id[$index]}}",
                        "recid": 2
                      },
                      {
                        "table": "detailsOrder",
                        "column": "detOrd_quantity",
                        "type": "number",
                        "value": "{{$_POST.detOrd_quantity[$index]}}",
                        "recid": 3
                      },
                      {
                        "table": "detailsOrder",
                        "column": "detOrd_date",
                        "type": "datetime",
                        "value": "{{$_POST.detOrd_date}}",
                        "recid": 4
                      }
                    ],
                    "table": "detailsOrder",
                    "returning": "detOrd_id",
                    "query": "insert into `detailsOrder` (`detOrd_date`, `detOrd_quantity`, `ord_id`, `pro_id`) values (?, ?, ?, ?)",
                    "params": [
                      {
                        "name": ":P1",
                        "type": "expression",
                        "value": "{{insertOrder.identity}}",
                        "test": ""
                      },
                      {
                        "name": ":P2",
                        "type": "expression",
                        "value": "{{$_POST.pro_id[$index]}}",
                        "test": ""
                      },
                      {
                        "name": ":P3",
                        "type": "expression",
                        "value": "{{$_POST.detOrd_quantity[$index]}}",
                        "test": ""
                      },
                      {
                        "name": ":P4",
                        "type": "expression",
                        "value": "{{$_POST.detOrd_date}}",
                        "test": ""
                      }
                    ]
                  }
                },
                "meta": [
                  {
                    "name": "identity",
                    "type": "text"
                  },
                  {
                    "name": "affected",
                    "type": "number"
                  }
                ],
                "output": true,
                "disabled": true
              }
            ]
          }
        },
        "steps": [
          {
            "name": "insertDetails",
            "module": "dbupdater",
            "action": "insert",
            "options": {
              "connection": "db",
              "sql": {
                "type": "insert",
                "values": [
                  {
                    "table": "detailsOrder",
                    "column": "ord_id",
                    "type": "number",
                    "value": "{{insertOrder.identity}}"
                  },
                  {
                    "table": "detailsOrder",
                    "column": "pro_id",
                    "type": "number",
                    "value": "{{$_POST.pro_id[$index]}}"
                  },
                  {
                    "table": "detailsOrder",
                    "column": "detOrd_quantity",
                    "type": "number",
                    "value": "{{$_POST.detOrd_quantity[$index]}}"
                  }
                ],
                "table": "detailsOrder",
                "query": "INSERT INTO `detailsOrder` (`ord_id`, `pro_id`, `detOrd_quantity`) VALUES (:P1, :P2, :P3)",
                "params": [
                  {
                    "name": ":P1",
                    "type": "expression",
                    "value": "{{insertOrder.identity}}"
                  },
                  {
                    "name": ":P2",
                    "type": "expression",
                    "value": "{{$_POST.pro_id[$index]}}"
                  },
                  {
                    "name": ":P3",
                    "type": "expression",
                    "value": "{{$_POST.detOrd_quantity[$index]}}"
                  }
                ]
              }
            },
            "meta": [
              {
                "name": "affected",
                "type": "number"
              }
            ],
            "output": true
          }
        ],
        "meta": [
          {
            "name": "$index",
            "type": "number"
          },
          {
            "name": "$number",
            "type": "number"
          },
          {
            "name": "$name",
            "type": "text"
          },
          {
            "name": "$value",
            "type": "object"
          },
          {
            "name": "insertDetails",
            "type": "text",
            "sub": [
              {
                "name": "identity",
                "type": "text"
              },
              {
                "name": "affected",
                "type": "number"
              }
            ]
          }
        ],
        "outputType": "array",
        "output": true
      },
      {
        "name": "repeat",
        "module": "core",
        "action": "repeat",
        "options": {
          "repeat": "{{$_POST.pro_id}}",
          "outputFields": [],
          "exec": {
            "steps": [
              {
                "name": "stock",
                "module": "core",
                "action": "setvalue",
                "options": {
                  "key": "g_stock",
                  "value": "{{$_POST.pro_stock[$index]-$_POST.detOrd_quantity[$index]}}"
                },
                "meta": [],
                "outputType": "number",
                "output": true
              },
              {
                "name": "update",
                "module": "dbupdater",
                "action": "update",
                "options": {
                  "connection": "db",
                  "sql": {
                    "type": "update",
                    "values": [
                      {
                        "table": "product",
                        "column": "pro_stock",
                        "type": "number",
                        "value": "{{stock}}",
                        "recid": 1
                      }
                    ],
                    "table": "product",
                    "wheres": {
                      "condition": "AND",
                      "rules": [
                        {
                          "id": "pro_id",
                          "field": "pro_id",
                          "type": "double",
                          "operator": "equal",
                          "value": "{{$_POST.pro_id[$index]}}",
                          "data": {
                            "column": "pro_id"
                          },
                          "operation": "="
                        }
                      ],
                      "conditional": null,
                      "valid": true
                    },
                    "returning": "pro_id",
                    "query": "update `product` set `pro_stock` = ? where `pro_id` = ?",
                    "params": [
                      {
                        "name": ":P1",
                        "type": "expression",
                        "value": "{{stock}}",
                        "test": ""
                      },
                      {
                        "operator": "equal",
                        "type": "expression",
                        "name": ":P2",
                        "value": "{{$_POST.pro_id[$index]}}",
                        "test": ""
                      }
                    ]
                  }
                },
                "meta": [
                  {
                    "name": "affected",
                    "type": "number"
                  }
                ],
                "output": true
              }
            ]
          }
        },
        "output": true,
        "meta": [
          {
            "name": "$index",
            "type": "number"
          },
          {
            "name": "$number",
            "type": "number"
          },
          {
            "name": "$name",
            "type": "text"
          },
          {
            "name": "$value",
            "type": "object"
          },
          {
            "name": "stock",
            "type": "number",
            "sub": []
          },
          {
            "name": "update",
            "type": "text",
            "sub": [
              {
                "name": "affected",
                "type": "number"
              }
            ]
          }
        ],
        "outputType": "array"
      },
      {
        "name": "query_order",
        "module": "dbconnector",
        "action": "select",
        "options": {
          "connection": "db",
          "sql": {
            "type": "select",
            "distinct": false,
            "columns": [
              {
                "aggregate": "sum",
                "distinct": false,
                "table": "detailsOrder",
                "column": "detOrd_quantity",
                "alias": "sum_total"
              }
            ],
            "table": {
              "name": "detailsOrder"
            },
            "joins": [],
            "wheres": {
              "condition": "AND",
              "rules": [
                {
                  "id": "detailsOrder.ord_id",
                  "field": "detailsOrder.ord_id",
                  "type": "double",
                  "operator": "equal",
                  "value": "{{insertOrder.identity}}",
                  "data": {
                    "table": "detailsOrder",
                    "column": "ord_id",
                    "type": "number",
                    "columnObj": {
                      "type": "reference",
                      "primary": false,
                      "nullable": true,
                      "references": "ord_id",
                      "inTable": "order",
                      "referenceType": "integer",
                      "onUpdate": "CASCADE",
                      "onDelete": "CASCADE",
                      "name": "ord_id"
                    }
                  },
                  "operation": "="
                }
              ],
              "conditional": null,
              "valid": true
            },
            "groupBy": [],
            "orders": [],
            "params": [
              {
                "operator": "equal",
                "type": "expression",
                "name": ":P1",
                "value": "{{insertOrder.identity}}",
                "test": ""
              }
            ],
            "primary": "detOrd_id",
            "query": "select sum(`detOrd_quantity`) as `sum_total` from `detailsOrder` where `detailsOrder`.`ord_id` = ?"
          }
        },
        "output": true,
        "meta": [
          {
            "type": "number",
            "name": "sum_total"
          }
        ],
        "outputType": "array",
        "type": "dbconnector_select"
      },
      {
        "name": "",
        "module": "core",
        "action": "condition",
        "options": {
          "if": "{{$_POST.cust_id}}",
          "then": {
            "steps": [
              {
                "name": "query_customer",
                "module": "dbconnector",
                "action": "single",
                "options": {
                  "connection": "db",
                  "sql": {
                    "type": "select",
                    "columns": [
                      {
                        "table": "customer",
                        "column": "cust_loyalP",
                        "recid": 1
                      }
                    ],
                    "params": [
                      {
                        "operator": "equal",
                        "type": "expression",
                        "name": ":P1",
                        "value": "{{$_POST.cust_id}}",
                        "test": "1"
                      }
                    ],
                    "table": {
                      "name": "customer"
                    },
                    "primary": "cust_id",
                    "joins": [],
                    "wheres": {
                      "condition": "AND",
                      "rules": [
                        {
                          "id": "customer.cust_id",
                          "field": "customer.cust_id",
                          "type": "double",
                          "operator": "equal",
                          "value": "{{$_POST.cust_id}}",
                          "data": {
                            "table": "customer",
                            "column": "cust_id",
                            "type": "number",
                            "columnObj": {
                              "type": "increments",
                              "primary": true,
                              "nullable": false,
                              "name": "cust_id"
                            }
                          },
                          "operation": "=",
                          "table": "customer"
                        }
                      ],
                      "conditional": null,
                      "valid": true
                    },
                    "query": "select `cust_loyalP` from `customer` where `customer`.`cust_id` = ?"
                  }
                },
                "output": true,
                "meta": [
                  {
                    "type": "number",
                    "name": "cust_loyalP"
                  }
                ],
                "outputType": "object",
                "type": "dbconnector_single"
              },
              {
                "name": "total_quantity",
                "module": "core",
                "action": "setvalue",
                "options": {
                  "key": "g_total_quantity",
                  "value": "{{query_customer.cust_loyalP+query_order[0].sum_total}}"
                },
                "meta": [
                  {
                    "name": "cust_loyalP",
                    "type": "number"
                  }
                ],
                "outputType": "text"
              },
              {
                "name": "query",
                "module": "dbconnector",
                "action": "select",
                "options": {
                  "connection": "db",
                  "sql": {
                    "type": "select",
                    "columns": [
                      {
                        "table": "detailsOrder",
                        "column": "detOrd_quantity",
                        "aggregate": "SUM",
                        "recid": 1
                      }
                    ],
                    "params": [
                      {
                        "operator": "equal",
                        "type": "expression",
                        "name": ":P1",
                        "value": "{{insertOrder.identity}}",
                        "test": "1869"
                      }
                    ],
                    "table": {
                      "name": "detailsOrder"
                    },
                    "primary": "detOrd_id",
                    "joins": [],
                    "groupBy": [],
                    "wheres": {
                      "condition": "AND",
                      "rules": [
                        {
                          "id": "detailsOrder.ord_id",
                          "field": "detailsOrder.ord_id",
                          "type": "double",
                          "operator": "equal",
                          "value": "{{insertOrder.identity}}",
                          "data": {
                            "table": "detailsOrder",
                            "column": "ord_id",
                            "type": "number",
                            "columnObj": {
                              "type": "reference",
                              "primary": false,
                              "nullable": true,
                              "references": "ord_id",
                              "inTable": "order",
                              "referenceType": "integer",
                              "onUpdate": "CASCADE",
                              "onDelete": "CASCADE",
                              "name": "ord_id"
                            }
                          },
                          "operation": "=",
                          "table": "detailsOrder"
                        }
                      ],
                      "conditional": null,
                      "valid": true
                    },
                    "query": "select sum(`detOrd_quantity`) from `detailsOrder` where `detailsOrder`.`ord_id` = ?"
                  }
                },
                "output": true,
                "meta": [
                  {
                    "type": "number",
                    "name": "detOrd_quantity"
                  }
                ],
                "outputType": "array",
                "disabled": true
              },
              {
                "name": "freeDrinks",
                "module": "core",
                "action": "setvalue",
                "options": {
                  "key": "g_freeDrinks",
                  "value": "{{(total_quantity/9).floor()}}"
                },
                "meta": [],
                "outputType": "number",
                "output": true
              },
              {
                "name": "newLoyalP",
                "module": "core",
                "action": "setvalue",
                "options": {
                  "key": "g_newLoyalP",
                  "value": "{{total_quantity%9}}"
                },
                "meta": [],
                "outputType": "text"
              },
              {
                "name": "update3",
                "module": "dbupdater",
                "action": "update",
                "options": {
                  "connection": "db",
                  "sql": {
                    "type": "update",
                    "values": [
                      {
                        "table": "customer",
                        "column": "cust_loyalP",
                        "type": "number",
                        "value": "{{g_total_quantity}}",
                        "recid": 1
                      }
                    ],
                    "table": "customer",
                    "wheres": {
                      "condition": "AND",
                      "rules": [
                        {
                          "id": "cust_id",
                          "field": "cust_id",
                          "type": "double",
                          "operator": "equal",
                          "value": "{{$_POST.cust_id}}",
                          "data": {
                            "column": "cust_id"
                          },
                          "operation": "="
                        }
                      ],
                      "conditional": null,
                      "valid": true
                    },
                    "returning": "cust_id",
                    "query": "update `customer` set `cust_loyalP` = ? where `cust_id` = ?",
                    "params": [
                      {
                        "name": ":P1",
                        "type": "expression",
                        "value": "{{g_total_quantity}}",
                        "test": ""
                      },
                      {
                        "operator": "equal",
                        "type": "expression",
                        "name": ":P2",
                        "value": "{{$_POST.cust_id}}",
                        "test": ""
                      }
                    ]
                  }
                },
                "meta": [
                  {
                    "name": "affected",
                    "type": "number"
                  }
                ],
                "output": true
              },
              {
                "name": "",
                "module": "core",
                "action": "condition",
                "options": {
                  "if": "{{total_quantity>=9}}",
                  "then": {
                    "steps": [
                      {
                        "name": "update1",
                        "module": "dbupdater",
                        "action": "update",
                        "options": {
                          "connection": "db",
                          "sql": {
                            "type": "update",
                            "values": [
                              {
                                "table": "customer",
                                "column": "cust_loyalP",
                                "type": "number",
                                "value": "{{newLoyalP}}",
                                "recid": 1
                              }
                            ],
                            "table": "customer",
                            "wheres": {
                              "condition": "AND",
                              "rules": [
                                {
                                  "id": "cust_id",
                                  "type": "double",
                                  "operator": "equal",
                                  "value": "{{$_POST.cust_id}}",
                                  "data": {
                                    "column": "cust_id"
                                  },
                                  "operation": "="
                                }
                              ]
                            },
                            "returning": "cust_id",
                            "query": "update `customer` set `cust_loyalP` = ? where `cust_id` = ?",
                            "params": [
                              {
                                "name": ":P1",
                                "type": "expression",
                                "value": "{{newLoyalP}}",
                                "test": ""
                              },
                              {
                                "operator": "equal",
                                "type": "expression",
                                "name": ":P2",
                                "value": "{{$_POST.cust_id}}",
                                "test": ""
                              }
                            ]
                          }
                        },
                        "meta": [
                          {
                            "name": "affected",
                            "type": "number"
                          }
                        ]
                      },
                      {
                        "name": "FreeDrinks",
                        "module": "core",
                        "action": "response",
                        "options": {
                          "status": 200,
                          "data": "{{'You got '+freeDrinks+' free drinks!'}}"
                        }
                      }
                    ]
                  },
                  "else": {
                    "steps": {
                      "name": "update2",
                      "module": "dbupdater",
                      "action": "update",
                      "options": {
                        "connection": "db",
                        "sql": {
                          "type": "update",
                          "values": [
                            {
                              "table": "customer",
                              "column": "cust_loyalP",
                              "type": "number",
                              "value": "{{g_total_quantity}}",
                              "recid": 1
                            }
                          ],
                          "table": "customer",
                          "wheres": {
                            "condition": "AND",
                            "rules": [
                              {
                                "id": "cust_id",
                                "type": "double",
                                "operator": "equal",
                                "value": "{{$_POST.cust_id}}",
                                "data": {
                                  "column": "cust_id"
                                },
                                "operation": "="
                              }
                            ]
                          },
                          "returning": "cust_id",
                          "query": "update `customer` set `cust_loyalP` = ? where `cust_id` = ?",
                          "params": [
                            {
                              "name": ":P1",
                              "type": "expression",
                              "value": "{{g_total_quantity}}",
                              "test": ""
                            },
                            {
                              "operator": "equal",
                              "type": "expression",
                              "name": ":P2",
                              "value": "{{$_POST.cust_id}}",
                              "test": ""
                            }
                          ]
                        }
                      },
                      "meta": [
                        {
                          "name": "affected",
                          "type": "number"
                        }
                      ]
                    }
                  }
                },
                "outputType": "boolean",
                "disabled": true
              },
              {
                "name": "query1",
                "module": "dbconnector",
                "action": "single",
                "options": {
                  "connection": "db",
                  "sql": {
                    "type": "select",
                    "columns": [],
                    "params": [
                      {
                        "operator": "equal",
                        "type": "expression",
                        "name": ":P1",
                        "value": "{{$_POST.cust_id}}",
                        "test": ""
                      }
                    ],
                    "table": {
                      "name": "customer"
                    },
                    "primary": "cust_id",
                    "joins": [],
                    "wheres": {
                      "condition": "AND",
                      "rules": [
                        {
                          "id": "customer.cust_id",
                          "field": "customer.cust_id",
                          "type": "double",
                          "operator": "equal",
                          "value": "{{$_POST.cust_id}}",
                          "data": {
                            "table": "customer",
                            "column": "cust_id",
                            "type": "number",
                            "columnObj": {
                              "type": "increments",
                              "primary": true,
                              "nullable": false,
                              "name": "cust_id"
                            }
                          },
                          "operation": "="
                        }
                      ],
                      "conditional": null,
                      "valid": true
                    },
                    "query": "select * from `customer` where `customer`.`cust_id` = ?"
                  }
                },
                "output": true,
                "meta": [
                  {
                    "type": "number",
                    "name": "cust_id"
                  },
                  {
                    "type": "text",
                    "name": "cust_name"
                  },
                  {
                    "type": "text",
                    "name": "cust_num"
                  },
                  {
                    "type": "text",
                    "name": "cust_email"
                  },
                  {
                    "type": "date",
                    "name": "cust_dob"
                  },
                  {
                    "type": "number",
                    "name": "cust_loyalP"
                  }
                ],
                "outputType": "object"
              },
              {
                "name": "",
                "module": "mail",
                "action": "send",
                "options": {
                  "instance": "mail",
                  "subject": "Your Points",
                  "toName": "{{query1.cust_name}}",
                  "toEmail": "{{query1.cust_email}}",
                  "body": "You currently have {{query1.cust_loyalP}} points. You are able to redeem {{freeDrinks}}",
                  "fromName": "noreply@xiadessert",
                  "fromEmail": "eric.lim@triwind.net"
                }
              }
            ]
          }
        },
        "outputType": "boolean"
      }
    ]
  }
}